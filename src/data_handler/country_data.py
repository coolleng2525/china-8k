# 国家数据模块
"""
提供世界主要国家和地区的地理坐标数据
"""

# 主要国家和地区的坐标数据（纬度，经度）
COUNTRIES_DATA = {
    '中国': (35, 105),
    '俄罗斯': (60, 110),
    '日本': (38, 140),
    '韩国': (37, 127),
    '朝鲜': (40, 128),
    '蒙古': (45, 105),
    '越南': (20, 106),
    '老挝': (20, 103),
    '柬埔寨': (14, 105),
    '泰国': (15, 100),
    '缅甸': (22, 96),
    '印度': (22, 78),
    '巴基斯坦': (30, 70),
    '阿富汗': (35, 65),
    '伊朗': (32, 53),
    '哈萨克斯坦': (48, 68),
    '乌兹别克斯坦': (41, 64),
    '塔吉克斯坦': (38, 71),
    '吉尔吉斯斯坦': (41, 75),
    '土库曼斯坦': (38, 58),
    '马来西亚': (3, 102),
    '新加坡': (1, 104),
    '印度尼西亚': (-5, 115),
    '菲律宾': (13, 122),
    '澳大利亚': (-25, 135),
    '新西兰': (-41, 174),
    '美国': (38, -97),  # 美国本土
    '阿拉斯加': (64, -150),  # 美国阿拉斯加州
    '加拿大': (60, -95),
    '墨西哥': (23, -102),
    '巴西': (-15, -55),
    '阿根廷': (-34, -64),
    '英国': (55, -3),
    '法国': (46, 2),
    '德国': (51, 10),
    '意大利': (41, 12),
    '西班牙': (40, -4),
    '波兰': (52, 20),
    '乌克兰': (49, 32),
    '土耳其': (39, 35),
    '沙特阿拉伯': (25, 45),
    '埃及': (27, 30),
    '南非': (-29, 24),
    '尼日利亚': (10, 8),
    '肯尼亚': (-1, 38),
    '以色列': (31, 35),
    '伊拉克': (33, 44),
    '叙利亚': (35, 38),
    '约旦': (31, 36),
    '黎巴嫩': (33, 35),
    '科威特': (29, 47),
    '卡塔尔': (25, 51),
    '阿联酋': (24, 54),
    '阿曼': (21, 57),
    '也门': (15, 48),
    '孟加拉国': (24, 90),
    '斯里兰卡': (7, 81),
    '尼泊尔': (28, 84),
    '不丹': (27, 89),
    '马尔代夫': (4, 73),
    '文莱': (4, 114),
    '东帝汶': (-8, 125),
    '巴布亚新几内亚': (-6, 147),
    '所罗门群岛': (-9, 160),
    '瓦努阿图': (-17, 168),
    '斐济': (-18, 178),
    '汤加': (-21, -175)
}

# 主要国家的简化边界数据
# 这些是简化的边界表示，用于基本的可视化
COUNTRIES_BOUNDARIES = {
    '中国': [
        (73, 53), (135, 53), (135, 18), (73, 18), (73, 53)
    ],
    '俄罗斯': [
        (27, 70), (180, 70), (180, 45), (27, 45), (27, 70)
    ],
    '日本': [
        (130, 45), (145, 45), (145, 30), (130, 30), (130, 45)
    ],
    '韩国': [
        (125, 38), (130, 38), (130, 34), (125, 34), (125, 38)
    ],
    '越南': [
        (102, 23), (109, 23), (109, 8), (102, 8), (102, 23)
    ],
    '印度': [
        (68, 35), (97, 35), (97, 8), (68, 8), (68, 35)
    ],
    '蒙古': [
        (87, 52), (119, 52), (119, 42), (87, 42), (87, 52)
    ],
    '哈萨克斯坦': [
        (46, 55), (87, 55), (87, 42), (46, 42), (46, 55)
    ],
    '泰国': [
        (95, 21), (105, 21), (105, 5), (95, 5), (95, 21)
    ],
    '马来西亚': [
        (99, 7), (120, 7), (120, -5), (99, -5), (99, 7)
    ],
    '澳大利亚': [
        (113, -10), (153, -10), (153, -43), (113, -43), (113, -10)
    ]
}

def get_countries_data():
    """
    获取所有国家的坐标数据
    
    返回:
        包含国家名称和坐标的字典
    """
    return COUNTRIES_DATA

def get_country_boundary(country_name):
    """
    获取特定国家的简化边界数据
    
    参数:
        country_name: 国家名称
    
    返回:
        边界坐标列表，如果国家不存在则返回None
    """
    return COUNTRIES_BOUNDARIES.get(country_name)

def get_countries_within_range(center_lat, center_lon, radius_km, distance_func):
    """
    获取在指定范围内的国家
    
    参数:
        center_lat: 中心点纬度
        center_lon: 中心点经度
        radius_km: 范围半径（公里）
        distance_func: 距离计算函数
    
    返回:
        包含范围内国家名称和距离的字典
    """
    within_range = {}
    
    for country, (lat, lon) in COUNTRIES_DATA.items():
        distance = distance_func(center_lat, center_lon, lat, lon)
        if distance <= radius_km:
            within_range[country] = distance
    
    return within_range